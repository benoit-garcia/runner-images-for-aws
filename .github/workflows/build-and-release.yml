name: Build and Release
run-name: ${{ inputs.distribution }}-full-${{ inputs.architecture }}

on:
  workflow_call:
    inputs:
      distribution:
        required: true
        type: string
      architecture:
        required: true
        type: string
      promote:
        required: false
        type: boolean
        default: true
    outputs:
      ami_name:
        description: "The name of the built AMI"
        value: ${{ jobs.build.outputs.ami_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SUBNET_ID: ${{ secrets.SUBNET_ID }}
    outputs:
      ami_name: ${{ steps.build.outputs.ami_name }}
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2
          bundler-cache: true
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - run: bundle exec bin/build --image-id ${{ inputs.distribution }}-full-${{ inputs.architecture }}
        id: build
        timeout-minutes: 300
      - if: always()
        run: bundle exec bin/utils/cleanup-instances

  test1:
    needs: build
    runs-on: runs-on,runner=2cpu-linux-${{ inputs.architecture }},image=${{ inputs.distribution }}-dev-${{ inputs.architecture }}
    steps:
      - uses: actions/checkout@v4
      - run: echo "Testing ${{ inputs.architecture }}"

  test2:
    needs: test1
    runs-on: runs-on,runner=2cpu-linux-${{ inputs.architecture }},image=${{ inputs.distribution }}-dev-${{ inputs.architecture }}
    steps:
      - uses: actions/checkout@v4
      - run: echo "Testing ${{ inputs.architecture }}"

  test3:
    needs: test2
    runs-on: runs-on,runner=2cpu-linux-${{ inputs.architecture }},image=${{ inputs.distribution }}-dev-${{ inputs.architecture }}
    steps:
      - uses: actions/checkout@v4
      - run: echo "Testing ${{ inputs.architecture }}"

  test4:
    needs: test3
    runs-on: runs-on,runner=2cpu-linux-${{ inputs.architecture }},image=${{ inputs.distribution }}-dev-${{ inputs.architecture }}
    steps:
      - uses: actions/checkout@v4
      - run: echo "Testing ${{ inputs.architecture }}"

  test5:
    needs: test4
    runs-on: runs-on,runner=2cpu-linux-${{ inputs.architecture }},image=${{ inputs.distribution }}-dev-${{ inputs.architecture }}
    steps:
      - uses: actions/checkout@v4
      - run: echo "Testing ${{ inputs.architecture }}"

  promote:
    if: inputs.promote
    needs:
      - build
      - test5
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.distribution }}/${{ inputs.architecture }}
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2
          bundler-cache: true
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Promote AMI
        run: bundle exec bin/copy-ami --force ${{ needs.build.outputs.ami_name }}